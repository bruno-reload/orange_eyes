[gd_resource type="ShaderMaterial" load_steps=3 format=2]

[sub_resource type="SpatialMaterial" id=1]
flags_unshaded = true
params_cull_mode = 1
params_grow = true
params_grow_amount = 0.08
albedo_color = Color( 0, 0, 0, 1 )

[sub_resource type="Shader" id=2]
code = "//#*************************************************************************************************#
//#                                        cel_shader.tres                                          #
//#                                                                                                 #
//#*************************************************************************************************#
//#                                    This file is part of:                                        #
//#                                         orange eyes                                             #
//#*************************************************************************************************#
//#*************************************************************************************************#
//#                            Copyright 2019 Bruno Correia da Silva                                #
//#                                                                                                 #
//#Permission is hereby granted, free of charge, to any person obtaining a copy of this     software#
//#and associated documentation files (the \"Software\"), to deal in the Software without restriction,#
//#including without limitation the rights to use, copy, modify, merge, publish,         distribute,#
//#sublicense, and/or sell copies of the Software, and to permit persons to whom     the Software is#
//# furnished to do so, subject to the following conditions:                                        #
//#                                                                                                 #
//#The above copyright notice and this permission notice shall be included in all copies          or#
//#substantial portions of the Software.                                                            #
//#                                                                                                 #
//#THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR               IMPLIED,#
//# INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A         PARTICULAR#
//#PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE     LIABLE FOR#
//#ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR       OTHERWISE,#
//#ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN       THE#
//#SOFTWARE.                                                                                        #
//#*************************************************************************************************#


shader_type spatial;
render_mode unshaded, cull_disabled;

uniform vec4 color : hint_color;
uniform float step_1 : hint_range(0.0,1.0);
uniform float step_2 : hint_range(0.0,1.0);
uniform float step_3 : hint_range(0.0,1.0);

uniform sampler2D texture_albedo : hint_albedo;

uniform vec2 pos ;

void fragment(){
	
	vec4 albedo_tex = texture(texture_albedo,UV);
	
	vec3 center = vec3(length(NORMAL.xy - pos));
	
	vec3 circle_1 = step(step_1, center);
	vec3 circle_2 = step(step_2, center);
	vec3 circle_3 = step(step_3, center);
	
	vec3 st = max(step(circle_1,vec3(0.0)),color.rgb);
	st *= max(step(circle_2,vec3(0.0)),color.rgb);
	st *= max(step(circle_3,vec3(0.0)),color.rgb);
	st *= color.rgb;
	ALBEDO = st*albedo_tex.rgb;
}
"

[resource]
next_pass = SubResource( 1 )
shader = SubResource( 2 )
shader_param/color = Color( 1, 0.709804, 0.662745, 1 )
shader_param/step_1 = 0.917
shader_param/step_2 = 0.419
shader_param/step_3 = 0.082
shader_param/pos = Vector2( 0.28, 0.53 )

